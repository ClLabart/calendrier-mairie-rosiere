{% extends 'base.html.twig' %}

{% block title %}{{ parent() }}Calendrier{% endblock %}

{% block headerTitle %}{{ parent() }}Calendrier{% endblock %}

{% block body %}
    <div id="calendar"></div>

    <div class="offcanvas offcanvas-end" tabindex="-1" id="CrudDate" aria-labelledby="CrudDateLabel">
        <div class="offcanvas-header">
            <p class="offcanvas-title h5" id="CrudDateLabel">Événements</p>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div id="OffCanvas-Events" class="offcanvas-body">
            {% if app.user %}
                <section id="listDates" class="h-25">
                    {# Ici iront les dates #}
                </section>
                <section class="h-75">
                    <hr>
                    <p class="text-center h-6 mb-2">Nouvel événement</p>
                    <div>
                    </div>
                    {{ form_start(form) }}
                        <div class="form-group text-center">
                            {{ form_label(form.title) }}
                            {{ form_widget(form.title) }}
                        </div>

                        <div class="form-group text-center" id="newDateStart">
                            {{ form_label(form.dateStart) }}
                            <button onclick="ManageHours(this)" type="button" class="btn btn-primary">Afficher l'heure</button>
                            {{ form_widget(form.dateStart) }}
                        </div>

                        <div class="form-group text-center form-check">
                            <input type="checkbox" class="form-check-input" id="newDateCheckbox" checked>
                            <label class="form-check-label" for="newDateCheckbox">Plusieurs jours ?</label>
                        </div>

                        <div class="form-group text-center" id="newDateEnd">
                            {{ form_label(form.dateEnd) }}
                            <button onclick="ManageHours(this)" type="button" class="btn btn-primary">Afficher l'heure</button>
                            {{ form_widget(form.dateEnd) }}
                        </div>

                        <div class="form-group text-center m-3" id="submitButton">
                            {{ form_widget(form.Enregistrer) }}
                        </div>
                    {{ form_end(form) }}
                </section>
            {% else %}
                <section id="listDates" class="h-100">
                    {# Ici iront les dates #}
                </section>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block js %}
    <script>
        function ManageHours(e) {
            let inputDate = e.nextElementSibling
            if (inputDate.type === "date") {
                let tempDate = inputDate.value + 'T00:00'
                inputDate.type = "datetime-local"
                inputDate.value = tempDate
            } else {
                let tempDate = inputDate.value.split('T')
                inputDate.type = "date"
                inputDate.value = tempDate[0]
            }
        }
        
        function stringToHTML(str) {
            var parser = new DOMParser();
            var doc = parser.parseFromString(str, 'text/html');
            return doc.body;
        }

        function padTo2Digits(num) {
            return num.toString().padStart(2, '0');
        }

        function formatDate(date = new Date()) {
            return [
                date.getFullYear(),
                padTo2Digits(date.getMonth() + 1),
                padTo2Digits(date.getDate()),
            ].join('-');
        }

        function formatDateWithHours(date = new Date()) {
            return [
                date.getFullYear(),
                padTo2Digits(date.getMonth() + 1),
                padTo2Digits(date.getDate()),
            ].join('-') + 'T' + [padTo2Digits(date.getHours()), padTo2Digits(date.getMinutes())].join(':');
        }

        {% if app.user %}
        // TODO
            // function ajax change dates on events
            // rajouter un popup dire ok ou non
        //code 403 si c'est pas l'event de l'utilisateur
            // changer l'event en fonction 403 ou non 
            function changeEvent(data, props) {

            }
            
        {% endif %}

        document.addEventListener('DOMContentLoaded', function() {
            var listDates = document.getElementById("listDates")
            
            var inputNewDateStart = document.getElementById("date_calendar_dateStart")
            var inputNewDateEnd = document.getElementById("date_calendar_dateEnd")
            
            var bsOffcanvas = new bootstrap.Offcanvas(document.getElementById('CrudDate'))
            var calendarEl = document.getElementById('calendar')
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                themeSystem: 'bootstrap5',
                selectable: true,
                events: [
                    {% for event in globalDate %}
                        {% if event.date != null %}
                            {
                                title: "{{ event.date.title }}",
                                color: "darkred",
                                start: "{{ event.date.dateStart|date("Y-m-d") }}",
                                {% if event.date.dateEnd|date("Y-m-d") != null %}
                                    end: "{{ event.date.dateEnd|date("Y-m-d") }}",
                                {% else %}
                                    allDay : false,
                                {% endif %}
                                id: {{ event.id }},
                            },
                        {% endif %}
                    {% endfor %}
                    {% for event in personalDate  %}
                        {
                            title: "{{ event.title }}",
                            start: "{{ event.dateStart|date("Y-m-d\\TH:i") }}",
                            {% if event.dateEnd|date("Y-m-d") != null %}
                                end: "{{ event.dateEnd|date("Y-m-d") }}",
                            {% else %}
                                allDay : false,
                            {% endif %}
                            id: {{ event.id }},
                        },
                    {% endfor %}
                ],
                select: function(info) {
                    let infoStart = info.start.getTime()
                    let infoEnd = info.end.getTime()
                    let dates = []
                    calendar.getEvents().forEach(element => {
                        let elementStart = element.start.getTime()
                        if (element.end == null) {
                            if (elementStart >= infoStart && elementStart < infoEnd) {
                                dates.push(element)
                            }
                        } else {
                            let elementEnd = element.end.getTime()
                            if ((elementStart >= infoStart && elementStart < infoEnd) || (elementEnd > infoStart && elementEnd <= infoEnd)) {
                                dates.push(element)
                            } else if (elementStart < infoStart && elementEnd > infoEnd) {
                                dates.push(element)
                            }
                        }
                    });

                    {% if app.user %}
                        inputNewDateStart.value = formatDate(info.start)
                        inputNewDateEnd.value = formatDateWithHours(info.end)
                    {% endif %}

                    manageDates(dates)
                },
                eventClick: function (selected) {
                    if (selected.event.end !== null) {
                        calendar.select(selected.event.start, selected.event.end)
                    } else {
                        calendar.select(selected.event.start)
                    }
                }
            });
            
            calendar.render()

            var holidays = [];

            async function getHolidays() {
                try {
                    // fetch les données de l'api des jours fériés
                    const response = await fetch("https://calendrier.api.gouv.fr/jours-feries/metropole.json")
                    const json = await response.json()
                    Object.entries(json).forEach((element) => {
                        calendar.addEvent({
                            title: element[1],
                            start: element[0],
                            color: "pink",
                            textColor: "black",
                            allDay: true,
                            extendedProps: "h"
                        })
                        calendar.render()
                    })
                } catch (e) {
                    console.error(e)
                }
            }

            // fetch les données de l'api des jours fériés
            getHolidays()

            {% if app.user %}
                var checkboxDate = document.getElementById("newDateCheckbox")
                var dateEndElement = document.getElementById("newDateEnd")
                var submitButton = document.getElementById("submitButton")
                checkboxDate.addEventListener("change", () => {
                    console.log(checkboxDate.checked)
                    if (checkboxDate.checked === true) {
                        document.getElementById("submitButton").remove()
                        checkboxDate.parentNode.parentNode.append(dateEndElement)
                        checkboxDate.parentNode.parentNode.append(submitButton)
                    } else {
                        document.getElementById("newDateEnd").remove()
                    }
                })
            {% endif %}

            function manageDates(dates) {
                listDates.innerHTML = ''
                bsOffcanvas.show()
                dates.forEach((date) => {
                    console.log(date)
                    let html = `
                    <article class="row mb-4">
                    <div class="col-1 d-flex"><div class="vr"></div></div>
                    <div class="col-11">
                    <p class="h6 text-center text-primary">` + date.title + `</p>`
                    if (date.extendedProps[0] !== "h") {
                        html += `<form class="form-inline mb-1">
                        <label class="m-3" for="dateStart` + date.id + `">Début :</label>
                        <button onclick="ManageHours(this)" type="button" class="btn btn-primary">Afficher l'heure</button>
                        <input class="form-control w-75" name="dateStart` + date.id + `" type="`;
                        if (date.allDay === true) {
                            html += "date";
                            html += `" value="` + formatDate(date.start) + `">`;
                        } else {
                            html += "datetime-local";
                            html += `" value="` + formatDateWithHours(date.start) + `">`;
                        }
                        if (date.end) {
                            html += `<label class="m-3" for="dateEnd` + date.id + `">Fin :</label>
                            <button onclick="ManageHours(this)" type="button" class="btn btn-primary">Afficher l'heure</button>
                            <input class="form-control w-75" name="dateEnd` + date.id + `" type="`;
                            if (date.allDay === true) {
                                html += "date";
                                html +=`" value="` + formatDate(date.end) + `">`;
                            } else {
                                html += "datetime-local";
                                html +=`" value="` + formatDateWithHours(date.end) + `">`;
                            }
                        }
                        html +=`</form>`
                    }
                    html += `</div>
                    </article>`;
                    let dom = stringToHTML(html)
                    listDates.append(dom)
                })
            }
        });
    </script>
{% endblock %}